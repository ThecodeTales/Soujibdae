body {
    background: linear-gradient(-45deg, #00ffff, #00ff00);
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
	width: 100%;
}

@keyframes gradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

h1 {
  color: black;
  text-align: center;
}

p {
  padding-left: 5px;
  font-family: italic;
  font-size: 30px;
}

section {
	position: relative;
	margin-right: auto;
	margin-left: auto;
	width:50%
}

#cf img {
    animation-name: cf3FadeInOut;
    animation-timing-function: ease-in-out;
/* if you only want to cycle a finite amount of times, 
   simply change 'infinite' with # of iterations you need */
    animation-iteration-count: infinite; 
    animation-duration: 16s;
    animation-direction: alternate; /* not strictly necessary */
    position:absolute;
}

#cf img:nth-of-type(1) {
    animation-delay: 15s;
}

#cf img:nth-of-type(2) {
    animation-delay: 13s;
}

#cf img:nth-of-type(3) {
    animation-delay: 11s;
}

#cf img:nth-of-type(4) {
    animation-delay: 9s;
}
#cf img:nth-of-type(5) {
    animation-delay: 7s;
}
#cf img:nth-of-type(6) {
    animation-delay: 5s;
}
#cf img:nth-of-type(7) {
    animation-delay: 3s;
}
#cf img:nth-of-type(8) {
    animation-delay: 1s;
}

@keyframes cf3FadeInOut {
    /* distributing times evenly */
    0% {
        opacity: 1;
    }
    25% {
        opacity: 0;
    }
    75% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.link1 {
	position: fixed;
	left: 20px;
	bottom: 50px;
	font-size: 30px;
	color: black;
}
.link2 {
	position: fixed;
	right: 20px;
	bottom:50px;
	font-size: 30px;
	color: black;
}
